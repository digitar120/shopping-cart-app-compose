x-common-variables: &common-variables
  AUTHSERVER_IP: host.docker.internal
  AUTHSERVER_PORT: 9090

  CONFIG_SERVER_IP: host.docker.internal
  CONFIG_SERVER_PORT: 8888

  EUREKA_IP: host.docker.internal
  EUREKA_PORT: 8761

  RABBITMQ_IP: host.docker.internal
  RABBITMQ_PORT: 5672

services:


  config:
    image: digitar120/config-public
    ports:
      - '8888:8888'
    healthcheck:
      # Se trabaja con un usuario no root
      # Alpine no trae curl, solo wget
      test: ["CMD-SHELL", "wget -S -O - http://localhost:8888/shopping-cart-app/dev"]
      interval: 15s
      timeout: 8s
      retries: 5


  discovery:
    image: digitar120/discovery
    ports:
      - '8761:8761'


  interservice-messaging:
    image: rabbitmq
    ports:
      - '5672'


  auth:
    image: digitar120/auth
    ports:
      - '9090:8080'
    environment:
      - 'KEYCLOAK_ADMIN=admin'
      - 'KEYCLOAK_ADMIN_PASSWORD=admin'
    command:
#      - /bin/sh
#      - -c
      - start-dev
    healthcheck:
      # https://gist.github.com/sarath-soman/5d9aec06953bbd0990c648605d4dba07
      # La imagen de Keycloak no incluye wget ni curl
      test: ['CMD-SHELL', '[ -f /tmp/HealthCheck.java ] || echo "public class HealthCheck { public static void main(String[] args) throws java.lang.Throwable { System.exit(java.net.HttpURLConnection.HTTP_OK == ((java.net.HttpURLConnection)new java.net.URL(args[0]).openConnection()).getResponseCode() ? 0 : 1); } }" > /tmp/HealthCheck.java && java /tmp/HealthCheck.java http://localhost:8080/']
      interval: 25s
      timeout: 13s
      retries: 5


  users:
    image: digitar120/users
    ports:
      - '9001:9001'
    environment:
      <<: *common-variables

    depends_on:
      config:
        condition: service_healthy
      auth:
        condition: service_healthy

    healthcheck:
      #test: [ "CMD-SHELL", "wget -S -O - http://localhost:9001/" ]
      # Intentado con wget y awk, pero esta soluciÃ³n parece mejor
      test: ['CMD-SHELL', '[ -f /tmp/HealthCheck.java ] || echo "public class HealthCheck { public static void main(String[] args) throws java.lang.Throwable { System.exit(java.net.HttpURLConnection.HTTP_UNAUTHORIZED == ((java.net.HttpURLConnection)new java.net.URL(args[0]).openConnection()).getResponseCode() ? 0 : 1); } }" > /tmp/HealthCheck.java && java /tmp/HealthCheck.java http://localhost:9001/']
      interval: 30s
      timeout: 15s
      retries: 5



  shopping-cart:
    image: digitar120/shopping-cart
    ports:
      - '9000:9000'
    environment:
      <<: *common-variables
      APPPORT: 9000
    depends_on:
      config:
        condition: service_healthy
      auth:
        condition: service_healthy

    healthcheck:
      test: ['CMD-SHELL', '[ -f /tmp/HealthCheck.java ] || echo "public class HealthCheck { public static void main(String[] args) throws java.lang.Throwable { System.exit(java.net.HttpURLConnection.HTTP_UNAUTHORIZED == ((java.net.HttpURLConnection)new java.net.URL(args[0]).openConnection()).getResponseCode() ? 0 : 1); } }" > /tmp/HealthCheck.java && java /tmp/HealthCheck.java http://localhost:9000/']
      interval: 30s
      timeout: 15s
      retries: 5

  gateway:
    image: digitar120/gateway
    ports:
      - '8080:8080'
    environment:
      <<: *common-variables
    depends_on:
      shopping-cart:
        condition: service_healthy
      users:
        condition: service_healthy
